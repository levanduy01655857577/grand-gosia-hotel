@mixin body-fontfamily {
    font-family: $body-fontfamily;
}

@mixin opacity($opacity) {
    opacity: $opacity;
    filter: alpha(opacity=$opacity*100);
    -webkit-filter: alpha(opacity=$opacity*100);
}

@mixin filter($filter) {
    filter: $filter;
    -webkit-filter: $filter;
}

@mixin box-shadow($box-shadow) {
    box-shadow: $box-shadow;
    -webkit-box-shadow: $box-shadow;
    -moz-box-shadow: $box-shadow;
    -ms-box-shadow: $box-shadow;
    -o-box-shadow: $box-shadow;
}

@mixin transition($transition) {
    transition: $transition;
    /* IE 10+, Fx 29+ */
    -webkit-transition: $transition;
    /* Safari 4+ */
    -moz-transition: $transition;
    /* Fx 5+ */
    -ms-transition: $transition;
    /* IE */
    -o-transition: $transition;
    /* Opera 12+ */
}

@mixin transform($transform) {
    transform: $transform;
    -webkit-transform: $transform;
    -moz-transform: $transform;
    -ms-transform: $transform;
    -o-transform: $transform;
}

@mixin animation-duration($seconds) {
    animation-duration: $seconds;
    -webkit-animation-duration: $seconds;
    -moz-animation-duration: $seconds;
    -ms-animation-duration: $seconds;
    -o-animation-duration: $seconds;
}

// @mixin animation($animation) {
//     animation: $animation;
//     -webkit-animation: $animation;
//     -moz-animation-duration: $animation;
//     -ms-animation-duration: $animation;
//     -o-animation-duration: $animation;
// }
@mixin animation($animation-name) {
    animation: $animation-name 1s linear infinite;
    -webkit-animation: $animation-name 1s linear infinite;
}

@mixin block-center-x {
    position: absolute;
    left: 50%;
    @include transform(translateX(-50%));
}

@mixin block-center-y {
    position: absolute;
    top: 50%;
    @include transform(translateY(-50%));
}

@mixin block-center {
    position: absolute;
    left: 50%;
    top: 50%;
    @include transform(translate(-50%, -50%));
}

// @mixin lineclamp($line-height, $line) {
//     overflow: hidden;
//     line-height: $line-height;
//     height: $line-height * $line;
//     text-overflow: ellipsis;
// }
@mixin lineclamp-1($height) {
    @extend %lineclamp-1;
    line-height: $height;
    max-height: $height;
}

@mixin lineclamp-1-media($height) {
    display: block;
    max-height: $height;
    line-height: $height;
    text-overflow: ellipsis;
    overflow: hidden;
}

@mixin lineclamp-n($font-size, $line-height, $lines-to-show) {
    @extend %lineclamp-n;
    // overflow: hidden;
    // text-overflow: ellipsis;
    // display: -webkit-box;
    // -webkit-box-orient: vertical;
    font-size: $font-size;
    line-height: $line-height;
    -webkit-line-clamp: $lines-to-show;
    max-height: $line-height*$lines-to-show;
    /* Fallback for non-webkit */
    // display: -webkit-box;
    // -webkit-box-orient: vertical;
    // overflow: hidden;
    // text-overflow: ellipsis;
}

@mixin lineclamp-n-media($font-size, $line-height, $lines-to-show) {
    display: block;
    font-size: $font-size;
    line-height: $line-height;
    -webkit-line-clamp: $lines-to-show;
    max-height: $line-height*$lines-to-show;
    /* Fallback for non-webkit */
    display: -webkit-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin border-radius($px) {
    border-radius: $px;
    -webkit-border-radius: $px;
    -moz-border-radius: $px;
    -ms-border-radius: $px;
    -o-border-radius: $px;
}

@mixin square($px) {
    height: $px;
    width: $px;
}

@mixin circel($px) {
    @include square($px);
    @extend %border-radius-50;
}

// @mixin list-inline($col) {
//     display: inline-grid;
//     width: 100%/$col;
// }
@mixin list-inline($col) {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    >* {
        width: 100%/$col;
        float: left;
        flex: 0 0 100%/$col;
        max-width: 100%/$col;
    }
}

@mixin flex-2 {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    >* {
        width: 50%;
        float: left;
        flex: 0 0 50%;
        max-width: 50%;
    }
}

// flex wrap equal column
@mixin flex-4 {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    >* {
        width: 25%;
        float: left;
        flex: 0 0 25%;
        max-width: 25%;
    }
}

@mixin navColor($navbarBgColor, $linkColor, $linkHoverColor) {
    .nav {
        background: $navbarBgColor;
        >li>a {
            background: transparent;
            &:hover,
            &:focus {
                background: transparent;
            }
        }
        >li {
            >a {
                color: $linkColor;
                // &:hover, &:focus {
                //     color: $linkHoverColor;
                //     border-color: $linkHoverColor;
                // }
            }
            // &.active {
            //     // > a, .dropdown-icon {
            //     .dropdown-icon {
            //         color: $linkHoverColor;
            //     }
            // }
        }
        // .dropdown {
        //     // .dropdown-icon {
        //     //     color: $linkColor;
        //     // }
        //     // &:hover .dropdown-icon {
        //     //     color: $linkHoverColor;
        //     // }
        //     >a:hover, >a:focus {
        //         background: $color1;
        //     }
        // }
    }
}

@mixin hoverScaleImg {
    img {
        transition: $time-hover;
        -webkit-transition: $time-hover;
        -moz-transition: $time-hover;
        -ms-transition: $time-hover;
        -o-transition: $time-hover;
    }
    &:hover img {
        @include transform(scale(1.2));
    }
}

@mixin transition($value) {
    transition: $value;
    -webkit-transition: $value;
    -moz-transition: $value;
    -ms-transition: $value;
    -o-transition: $value;
}

@mixin widthCalc($value) {
    width: calc(#{$value});
    width: -webkit-calc(#{$value});
    width: -moz-calc(#{$value});
    width: -ms-calc(#{$value});
    width: -o-calc(#{$value});
}

@mixin opacity($value) {
    opacity: $value;
    $opcity-fillter: $value * 100;
    filter: alpha(opacity=$opcity-fillter);
}

@mixin borderRadius($value) {
    border-radius: $value;
    -webkit-border-radius: $value;
    -moz-border-radius: $value;
    -ms-border-radius: $value;
    -o-border-radius: $value;
}

@mixin translate($x, $y) {
    transform: translate($x, $y);
    -webkit-transform: translate($x, $y);
    -moz-transform: translate($x, $y);
    -ms-transform: translate($x, $y);
    -o-transform: translate($x, $y);
}

@mixin boxShadow($value) {
    box-shadow: $value;
    -webkit-box-shadow: $value;
    -moz-box-shadow: $value;
    -ms-box-shadow: $value;
    -o-box-shadow: $value;
}

@mixin heightCalc($value) {
    height: calc(#{$value});
    height: -webkit-calc(#{$value});
    height: -moz-calc(#{$value});
    height: -ms-calc(#{$value});
    height: -o-calc(#{$value});
}

@mixin splitText($row, $maxHeight) {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $row;
    -webkit-box-orient: vertical;
    max-height: $maxHeight;
}

@mixin transform($value) {
    transform: $value;
    -webkit-transform: $value;
    -moz-transform: $value;
    -ms-transform: $value;
    -o-transform: $value;
}

@mixin propertyAllCode($property, $value) {
    #{$property}: $value;
    -webkit-#{$property}: $value;
    -moz-#{$property}: $value;
    -ms-#{$property}: $value;
    -o-#{$property}: $value;
}

@mixin calc($type, $value) {
    #{$type}: calc(#{$value});
    #{$type}: -webkit-calc(#{$value});
    #{$type}: -moz-calc(#{$value});
    #{$type}: -ms-calc(#{$value});
    #{$type}: -o-calc(#{$value});
}